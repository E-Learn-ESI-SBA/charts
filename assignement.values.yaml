# Default values for ..
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: madaurus/assignments
  pullPolicy: IfNotPresent
  tag: "v1.2.3"




serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: assignments

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  limits:
    cpu: 60m
    memory: 220Mi
  requests:
    cpu: 50m
    memory: 132Mi

livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 8

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 8

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: 
      - name: default-storage
        persistentVolumeClaim:
          claimName: assignments-pvc
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

volumeMounts:
    - name: default-storage
      mountPath: "/app/uploads"

nodeSelector: {}

tolerations: []

affinity: {}
pvc:
  enabled: true
  name:  assignments-pvc
  volumeName: assignments-pv
  accessModes: ReadWriteOnce
  storage: 4Gi
  storageLimit: 4.2Gi

pv: 
  enabled: true
  name: assignments-pv
  storage: 4.6Gi
  mode: ReadWriteOnce
  hostPath: /data/app/assignments    




# localDatabase:
#     dbName: assignments-db
#     enabled: true
#     image: 
#       repository: postgres
#       tag: 13.14-bullseye
#       pullPolicy: IfNotPresent
#     port: 5432
#     env:
#       - name: POSTGRES_DB
#         value: postgres
#       - name: POSTGRES_USER
#         value: postgres
#       - name: POSTGRES_PASSWORD
#         value: postgres
#       - name: DB_HOST
#         value: localhost
    
#     volumeMounts:
#       - name: default-storage
#         mountPath: /var/lib/postgresql/data
#     volume:
#       - name: default-storage
#         persistentVolumeClaim:
#           claimName: assignments-pvc        

secrets: 
    enabled: true
    name: assignments-secrets
    data:
      JWT_SECRET: oXpyiGrnL3O6AUa9b7eyTohpFeSBzQLwWHEzTJZ71x8=
      SECRET_KEY: oXpyiGrnL3O6AUa9b7eyTohpFeSBzQLwWHEzTJZ71x8=


container:
  name: assignments
  port: 8080
  containerPort: 8080
  env:
        -  name: ENVIRONMENT
           valueFrom:
            configMapKeyRef:
              name: assignments-config
              key: "environment" 
        -  name: JWT_SECRET
           valueFrom:
            secretKeyRef:
              name: assignments-secrets
              key: "JWT_SECRET"
        -  name: SECRET_KEY
           valueFrom:
            secretKeyRef:
              name: assignments-secrets
              key: "SECRET_KEY"
        -  name: DB_PASS
           valueFrom:
            secretKeyRef:
              name: madaurus-postgres-postgresql
              key: "postgres-password"                 
        -  name: DB_HOST
           value: madaurus-postgres-postgresql
        -  name: DB_PORT
           value: "5432"
        -  name: DB_USER
           value: postgres
        -  name: DB_NAME
           value: assignment
        -  name: PDP_SERVER
           value: http://pdp-madaurus          
        -  name: KAFKA_BROKER
           valueFrom:
            configMapKeyRef:
              name: assignments-config
              key: "KAFKA_BROKER"
        - name: PERMIT_TOKEN
          valueFrom:
            configMapKeyRef:
              name: assignments-config
              key: "PERMIT_TOKEN" 
               
configmap:
    enabled: true
    name: assignments-config
    data:
      environment: "production"
      PDP_SERVER: http://pdp-madaurus
      KAFKA_BROKER: kafka-cluster-kafka-brokers
      KAFKA_BROKER2: kafka-cluster-kafka-brokers:9091
      PERMIT_TOKEN: permit_key_dyl2zhOIm2EXssDKP33JGbqGKKPiZarQjl0AcL7ZYvsYsLz2zFGDWcdRghccmR0EEJF5TS8c99g5ItDHl87alV


