{{- if .Values.configmap.enabled -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{.Values.configmap.name}}
  namespace: madaurus
data:
{{- with .Values.configmap.data}}
  {{- toYaml . | nindent 2 }}
{{- end }}
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: madaurus
  name: {{ include "..fullname" . }}
  labels:
    {{- include "..labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "..selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "..labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "..serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.container.name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.container.env}}
          env:
            {{- toYaml .  | nindent 12}}
          {{- end}}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- if .Values.localDatabase.enabled}}
        {{- with .Values.localDatabase}}
        - name:  {{.Values.localDatabase.name}}
          image: {{.Values.localDatabase.image}}
          ports:
            - containerPort: {{.Values.localDatabase.port}}
          env:
            {{- toYaml .Values.localDatabase.env | nindent 12 }}
          volumeMounts:
            {{- toYaml .Values.localDatabase.volumeMounts | nindent 12 }}
        {{- end}}
        {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
        {{- end }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: madaurus
  name: {{ .Values.pvc.name }}
spec:
  storageClassName: maduarus-sc # Constant value for now
  volumeName: {{ .Values.pvc.volumeName }}
  accessModes:
    - {{ .Values.pvc.accessModes }}
  resources:
    requests:
      storage: {{ .Values.pvc.storage }}

{{- if .Values.secrets.enabled -}}
---
apiVersion: v1
kind: Secret
metadata:
  namespace: madaurus
  name: {{.Values.secrets.name}}
type: Opaque
data:
{{- with .Values.secrets.data}}
  {{- toYaml . | nindent 2 }}
{{- end }}


{{- end }}





