
replicaCount: 2

deployment: 
      name: materials
image:
  repository:  madaurus/materials
  pullPolicy: IfNotPresent
  tag: "1.2.4"


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: materials

    
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


# Writing Max resources for simple go app
resources: 
  limits:
    cpu: 160m
    memory: 320Mi
  requests:
    cpu: 110m
    memory: 200Mi


livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 8  
readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 8
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 4 
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: 
    - name: default-storage
      persistentVolumeClaim:
        claimName: material-pvc
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
    - name: default-storage
      mountPath: "/app/storage"
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}







secrets: 
    enabled: true
    name: material-secrets
    data:
      JWT_SECRET: oXpyiGrnL3O6AUa9b7eyTohpFeSBzQLwWHEzTJZ71x8=

pvc:
  enabled: true
  name: material-pvc
  volumeName: material-pv
  accessModes: ReadWriteOnce
  storage: 25Gi
  storageLimit: 30Gi


pv: 
  enabled: true
  name: material-pv
  storage: 30Gi
  mode: ReadWriteOnce
  hostPath: /data/app/material


container:
  name: material
  port: 8080
  containerPort: 8080
  env:
        -  name: ENVIRONMENT
           valueFrom:
            configMapKeyRef:
              name: materials-config
              key: "environment" 
        -  name: JWT_SECRET
           valueFrom:
            secretKeyRef:
              name: material-secrets
              key: "JWT_SECRET"
        - name: PERMIT_TOKEN
          valueFrom:
            configMapKeyRef:
              name: materials-config
              key: "PERMIT_TOKEN"
        - name: PDP_SERVER
          value: http://pdp-madaurus       
        - name: database_uri
          valueFrom:
            configMapKeyRef:
              name: materials-config
              key: "database_uri"
        - name: sentry_dsn
          valueFrom:
            configMapKeyRef:
              name: materials-config
              key: "sentry_dsn"     
        - name: KAFKA_BROKER
          valueFrom:
            configMapKeyRef:
              name: materials-config
              key: "KAFKA_BROKER"            

localDatabase:
      enabled: false

configmap:
    enabled: true
    name: materials-config
    data:
      environment: "production"
      sentry_dsn: "https://1168f4da88bba3f9669f88cbcc76cc11@o4506915435053056.ingest.us.sentry.io/4506994124718080"
      PDP_SERVER: http://localhost:7766
      database_uri: "mongodb+srv://madaurus:madaurus@madaurus.nredljo.mongodb.net/materials?retryWrites=true&w=majority&appName=madaurus"
      KAFKA_BROKER: kafka-cluster-kafka-brokers
      PERMIT_TOKEN: permit_key_dyl2zhOIm2EXssDKP33JGbqGKKPiZarQjl0AcL7ZYvsYsLz2zFGDWcdRghccmR0EEJF5TS8c99g5ItDHl87alV

