# Default values for ..
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: madaurus/staff
  pullPolicy: IfNotPresent
  tag: "v1.0.1"




serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: staff

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  limits:
    cpu: 260m
    memory: 320Mi
  requests:
    cpu: 150m
    memory: 280Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: 
      - name: default-storage
        persistentVolumeClaim:
          claimName: staff-pvc
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

volumeMounts:
    - name: default-storage
      mountPath: "/app/storage"

nodeSelector: {}

tolerations: []

affinity: {}
pvc:
  enabled: true
  name:  staff-pvc
  volumeName: staff-pv
  accessModes: ReadWriteOnce
  storage: 10Gi
  storageLimit: 15Gi

pv: 
  enabled: true
  name: staff-pv
  storage: 10Gi
  mode: ReadWriteOnce
  hostPath: /data/app/staff    




# localDatabase:
#     dbName: staff-db
#     enabled: true
#     image: 
#       repository: postgres
#       tag: 13.14-bullseye
#       pullPolicy: IfNotPresent
#     port: 5432
#     env:
#       - name: POSTGRES_DB
#         value: postgres
#       - name: POSTGRES_USER
#         value: postgres
#       - name: POSTGRES_PASSWORD
#         value: postgres
#       - name: DB_HOST
#         value: localhost
    
#     volumeMounts:
#       - name: default-storage
#         mountPath: /var/lib/postgresql/data
#     volume:
#       - name: default-storage
#         persistentVolumeClaim:
#           claimName: staff-pvc        

secrets: 
    enabled: true
    name: staff-secrets
    data:
      JWT_SECRET: I0QzZjR1bHRKV1RTM2NyM3Qj
      SECRET_KEY: I0QzZjR1bHRKV1RTM2NyM3Qj


container:
  name: staff
  port: 8080
  containerPort: 8080
  env:
        -  name: ENVIRONMENT
           valueFrom:
            configMapKeyRef:
              name: staff-config
              key: "environment" 
        -  name: JWT_SECRET
           valueFrom:
            secretKeyRef:
              name: staff-secrets
              key: "JWT_SECRET"
        -  name: SECRET_KEY
           valueFrom:
            secretKeyRef:
              name: staff-secrets
              key: "SECRET_KEY"
        -  name: DB_PASS
           valueFrom:
            secretKeyRef:
              name: madaurus-postgres-postgresql
              key: "postgres-password"                 
        -  name: DB_HOST
           value: madaurus-postgres-postgresql
        -  name: DB_PORT
           value: "5432"
        -  name: DB_USER
           value: postgres
        -  name: DB_NAME
           value: staff       
configmap:
    enabled: true
    name: staff-config
    data:
      environment: "development"

# pvdb:
#   enabled: true
#   name: staff-db-pv
#   storage: 2Gi
#   hostPath: /data/database/staff      
#   storageLimit: 2Gi
#   volumeName: staff-db-pv
#   pvcName: staff-db-pvc
#   accessModes: ReadWriteOnce